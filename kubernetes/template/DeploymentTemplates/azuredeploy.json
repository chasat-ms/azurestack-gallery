{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}