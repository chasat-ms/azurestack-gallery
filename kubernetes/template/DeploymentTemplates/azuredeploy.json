{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}