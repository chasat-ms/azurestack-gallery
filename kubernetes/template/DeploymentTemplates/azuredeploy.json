{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "aksEngineRepository": {
      "defaultValue": "jadarsie/azurestack-gallery",
      "metadata": {
        "description": "AKS engine repository"
      },
      "type": "string"
    },
    "aksEngineBranch": {
      "defaultValue": "distro-param",
      "metadata": {
        "description": "AKS engine branch"
      },
      "type": "string"
    },
    "aksEngineReleaseFileName": {
      "defaultValue": "aks-engine",
      "metadata": {
        "description": "AKS engine release file name"
      },
      "type": "string"
    },
    "aksEngineAPIModelPrefix": {
      "defaultValue": "azurestack-kubernetes",
      "metadata": {
        "description": "AKS engine API Model Prefix name"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "nodesDistro": {
      "defaultValue": "aks",
      "allowedValues": [
        "ubuntu",
        "aks"
      ],
      "metadata": {
        "description": "The linux distribution to deploy on the cluster nodes."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' AKS_ENGINE_REPOSITORY=','\"',parameters('aksEngineRepository'),'\"',' AKS_ENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"',' AKS_ENGINE_APIMODEL_PREFIX=','\"',parameters('aksEngineAPIModelPrefix'),'\"',' AKS_ENGINE_RELEASE_FILE_NAME=','\"',parameters('aksEngineReleaseFileName'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' NODES_DISTRO=','\"',parameters('nodesDistro'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}