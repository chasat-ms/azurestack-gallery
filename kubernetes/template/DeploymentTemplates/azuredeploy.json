{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}