{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}